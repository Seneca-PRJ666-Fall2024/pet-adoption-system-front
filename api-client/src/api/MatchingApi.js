/**
 * Pet Adoption System API
 * API for user registration, login, adopter preferences, shelter pet management, and recommendations in the Pet Adoption System.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@petadoption.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Recommendation from '../model/Recommendation';
import SuccessApiResponse from '../model/SuccessApiResponse';

/**
* Matching service.
* @module api/MatchingApi
* @version 4.0.0
*/
export default class MatchingApi {

    /**
    * Constructs a new MatchingApi. 
    * @alias module:api/MatchingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the matchingRecommendationIdAcceptPost operation.
     * @callback module:api/MatchingApi~matchingRecommendationIdAcceptPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SuccessApiResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Accept a recommendation and create an adoption
     * @param {Number} id The ID of the recommendation to accept
     * @param {module:api/MatchingApi~matchingRecommendationIdAcceptPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SuccessApiResponse}
     */
    matchingRecommendationIdAcceptPost(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling matchingRecommendationIdAcceptPost");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SuccessApiResponse;
      return this.apiClient.callApi(
        '/matching/recommendation/{id}/accept', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the matchingRecommendationNextGet operation.
     * @callback module:api/MatchingApi~matchingRecommendationNextGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Recommendation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the next recommendation for the adopter
     * @param {module:api/MatchingApi~matchingRecommendationNextGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Recommendation}
     */
    matchingRecommendationNextGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Recommendation;
      return this.apiClient.callApi(
        '/matching/recommendation/next', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the matchingRecommendationsGet operation.
     * @callback module:api/MatchingApi~matchingRecommendationsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Recommendation>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of recommended pets based on preferences
     * @param {module:api/MatchingApi~matchingRecommendationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Recommendation>}
     */
    matchingRecommendationsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Recommendation];
      return this.apiClient.callApi(
        '/matching/recommendations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
